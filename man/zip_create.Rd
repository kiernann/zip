% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create.R
\name{zip_create}
\alias{zip_create}
\alias{zip_append}
\title{Compress files into ZIP archives}
\usage{
zip_create(
  path,
  archive,
  recurse = TRUE,
  level = 9,
  junk_paths = FALSE,
  include_dirs = TRUE,
  root = "."
)

zip_append(
  path,
  archive,
  recurse = TRUE,
  level = 9,
  junk_paths = FALSE,
  include_dirs = TRUE,
  root = "."
)
}
\arguments{
\item{path}{Character vector of files to add to the archive.}

\item{archive}{The ZIP file path to create. If the file exists,
\code{\link[=zip_create]{zip_create()}} overwrites it, but \code{\link[=zip_append]{zip_append()}} appends to it.}

\item{recurse}{Whether to add the contents of directories recursively.}

\item{level}{Integer between 1 and 9. Higher compression takes longer.}

\item{junk_paths}{Whether to remove full file path. See "Relative paths"
below for more. An alternative to the \code{mode} argument of \code{\link[zip:zip]{zip::zip()}}.}

\item{include_dirs}{Whether to explicitly include directories in the archive.}

\item{root}{Directory to temporarily change to before creating archive.}
}
\value{
The name of the created ZIP archive, invisibly.
}
\description{
Compared to \code{\link[zip:zip]{zip::zip()}} and \code{\link[utils:zip]{utils::zip()}}, \code{\link[=zip_create]{zip_create()}} takes the path of
files to include in the archive as the first argument. Append new compressed
files to an existing archive with \code{\link[=zip_append]{zip_append()}}.
}
\details{
\subsection{Relative paths}{

\code{zip_create()} and \code{zip_append()} both use the \code{junk_paths} argument in lieu
of the \code{mode} argument from \code{\link[zip:zip]{zip::zip()}}.

When \code{junk_paths} is set to \code{FALSE} (the default), the directory structure of
included files is preserved; the working directory will temporarily be
changed to the \code{root} argument before creating the archive.

(Absolute paths are also kept. Note that this might result non-portable
archives: some zip tools do not handle ZIP archives that contain absolute
file names, or file names that start with \verb{../} or \verb{./}. zippr warns you if
this should happen.)

When \code{junk_paths} is set to \code{TRUE}, the selected files and directories will
be at the root of the archive. This mode is handy if you want to select a
subset of files and directories, possibly from different paths and put all of
the in the archive, at the top level.
}

\subsection{Permissions:}{

\code{zip_create()} (and \code{zip_append()}) add the permissions of the archived files
and directories to the ZIP archive, on Unix systems. Most zip and unzip
implementations support these, so they will be recovered after extracting the
archive. Note, however that the owner and group (uid and gid) are currently
omitted, even on Unix.
}
}
\examples{
\dontshow{.old_wd <- setwd(tempdir())}
library(fs)
dir_create(path("mydir"))
cat("first file", file = path("mydir", "file1"))
cat("second file", file = path("mydir", "file2"))

z <- file_temp(ext = "zip")
zip_create("mydir", z)

## List contents
zip_info(z)

## Add another file
cat("third file", file = path("mydir", "file3"))
zip_append(path("mydir", "file3"), z)
zip_info(z)
\dontshow{setwd(.old_wd)}

}
